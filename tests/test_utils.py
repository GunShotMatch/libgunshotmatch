# stdlib
import re
from decimal import Decimal
from statistics import mean, stdev
from typing import List

# 3rd party
import numpy
import pytest
import yaml
from domdf_python_tools.paths import PathPlus

# this package
from libgunshotmatch.project import Project
from libgunshotmatch.utils import get_rt_range, get_truncated_normal, round_rt


def test_round_rt():
	assert str(round_rt(1)) == "1.0000000000"
	assert str(round_rt(1.00005)) == "1.0000500000"
	assert str(round_rt(Decimal(3 / 3.142))) == "0.9548058561"


@pytest.mark.parametrize(
		"values",
		[
				[
						23659721.809523813,
						11193673.095238088,
						12101597.571428562,
						3218354.5714285714,
						30027892.523809493
						],
				[12160248.33333334, 8721004.523809526, 15435310.619047618, 3202100.4761904734, 14962950.476190472],
				[60380313.61904757, 40394497.428571396, 57413838.66666664, 67593984.42857146, 72190187.95238094],
				[22482185.66666665, 13599473.76190476, 20295284.857142854, 20589849.28571428, 29080512.85714286],
				[2822757.095238095, 1282709.9523809515, 1104223.9523809517, 745746.0476190476, 3275910.523809524],
				[3150407.285714287, 2696780.666666666, 2233913.904761903, 2376236.1904761894, 3522898.857142855],
				[9953378.71428571, 6344169.2380952295, 7616943.952380951, 8165879.6190476185, 17216403.095238093],
				[97518499.09523804, 95836502.52380952, 122139948.1904761, 124067367.71428564, 143894445.90476176],
				[24946351.95238096, 15960534.333333328, 19337722.76190475, 19923808.476190478, 36331055.80952376],
				[7021679.571428564, 3706877.238095238, 5895011.761904759, 4425566.285714289, 9080031.809523806],
				[7887201.047619041, 4730523.333333329, 749338.2380952379, 6903148.285714282, 9104634.8095238],
				[6219135.9523809515, 4525249.380952376, 2148300.2857142854, 9614642.428571427, 14053359.333333327],
				[9632809.571428569, 5347370.333333329, 2559077.333333332, 15989104.047619043, 18749892.04761904],
				[55659597.57142852, 39535688.95238094, 10051058.23809524, 109909805.80952372, 115208009.76190469],
				[3875565.809523809, 9265482.85714285, 4031804.9523809534, 4689306.619047619, 23331777.95238095],
				[
						1295653103.0000002,
						1863474710.3809516,
						1891007440.7142847,
						1264547167.761905,
						2205069135.1428566
						],
				[3740419.428571427, 2247096.5714285714, 2916696.7619047607, 7322393.190476186, 6562306.476190475],
				[9574537.999999996, 8716887.095238082, 8749101.857142858, 15426529.619047608, 10316727.238095237],
				[10541006.476190472, 8163470.380952374, 8866116.33333333, 16286094.095238086, 16093095.523809502],
				]
		)
@pytest.mark.usefixtures("advanced_data_regression")
def test_get_truncated_normal(datadir, request, values: List[float]):  # noqa: MAN001
	with open(datadir / re.sub(r"[\[\]]", '_', f"{request.node.name}.yml"), encoding="utf-8") as fp:
		expected = yaml.safe_load(fp)

	real_mean = mean(values)
	real_stdev = stdev(values)
	simulated_values = get_truncated_normal(
			real_mean,
			real_stdev,
			min(values),
			max(values),
			5,
			random_state=20231102,
			)

	numpy.allclose(simulated_values, expected)
	# advanced_data_regression.check(list(map(float, simulated_values)))


# TODO: ms_comparison


def test_get_rt_range():
	project_file = PathPlus(__file__).parent / "ELEY .22LR.gsmp"
	project = Project.from_file(project_file)
	min_rt, max_rt = get_rt_range(project)
	assert f"{min_rt:.4f}" == "0.0175"
	assert f"{max_rt:.4f}" == "37.0127"
